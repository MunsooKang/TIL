문제3

(1) 스택(stack)에 대해 간단히 설명하시오.
스택은 선형 타입의 데이터 구조 중 하나로, 후입선출(Last in - first out)의 방식을 지니고 있다.
한 쪽 끝에서만 데이터가 추가되며, 똑같이 한 쪽 끝에서만 데이터가 삭제된다.
데이터를 추가하는 것을 push, 삭제하는 것을 pop 이라고 한다.

(2) Depth Frist Serch(DFS, 깊이우선탐색)에 대해 간단히 설명하시오.
DFS는 그래프와 같은 비선형타입의 데이터를 순회하는 기법 중 하나이다.
정점과 간선을 받아 시작 정점을 기준으로 이어진 간선을 갈 수 있는 곳 까지 최대한 깊게 탐색 한 후,
더 이상 탐색할 곳이 없으면 갈림길이 있던 마지막 간선으로 되돌아와 다시 갈 수 있는 곳이 있는지 탐색을 반복하여, 최종적으로는 갈 수 있는 모든 길을 탐색한다.
마지막으로 간 정점을 저장하여 되돌아오기 위해 일반적으로 LIFO 형식을 띄는 스택을 사용하거나 재귀함수를 사용하여 구현한다.

(3) 해당 그래프의 4번 정점에서 DFS를 할 경우 방문 순서를 적고, 갈림길에서의 선택을 설명하시오.

- 방문 순서 : 4 - 2 - 1 - 3 - 7 - 6 - 5
보기에서 정점의 방문순서는 1,2,4,6,5,7,3 임을 봤을 때 갈림길이 있을 때 방문하지 않는 숫자가 낮은 정점을 먼저 탐색한다는 것을 알 수 있다.
따라서 첫번째 갈림길 2에서는 2와 6중에서 2를 방문하고 스택에 추가한다(push), 2에서는 1과 5중에서 1을 방문, 1에서는 2와 3중에서 2는 이미 탐색했기에 3을 방문,
3에서도 마찬가지로 1과 7중에서 1을 이미 방문했기에 7을 방문, 7에서도 3과 6중에서 3을 이미 방문했기에 6을 방문, 6에서는 5와 7중에서 5를 방문
마지막으로는 5에서는 이미 모든 경로를 다 탐색했기에 다시 마지막으로 방문한 정점으로 되돌아 간다(pop, 5-6-7-3-1-2-4순).
마지막으로 시작지점인 4에서 갈 수 있는 모든 경로를 탐색했기 때문에 빈 스택이 만들어지고 모든 조회가 끝난다.


